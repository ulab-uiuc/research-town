name: Pytest

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [ready_for_review]

jobs:
  Pytest:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        curl -sSL https://install.python-poetry.org | python3
        poetry install --all-extras
    - name: Test with pytest
      env: # Or as an environment variable
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
      run: |
        poetry run pytest

  Label-Ready-For-Review:
    runs-on: ubuntu-latest
    if: github.event.action == 'ready_for_review'
    steps:
      - name: Apply `ready-for-review` Label
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['ready-for-review']
            })